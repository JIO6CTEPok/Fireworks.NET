using System;

namespace FireworksNet
{
    /// <summary>
    /// Stores user-defined constants that control algorithm run
    /// </summary>
    /// <remarks>Uses notation described in 2010 paper</remarks>
    public class AlgorithmSetup
    {
        /// <summary>
        /// n - Number of fireworks (initial or selected on each step)
        /// </summary>
        public Int32 LocationsNumber { get; set; }

        /// <summary>
        /// m - Parameter controlling the total number of sparks generated
        /// by <see cref="LocationsNumber"/> fireworks
        /// </summary>
        public Double ExplosionSparksNumberModifier { get; set; }

        /// <summary>
        /// a - Constant,
        /// has to be 0 &lt; a &lt; <paramref name="ExplosionSparksNumberUpperBound"/>
        /// </summary>
        public Double ExplosionSparksNumberLowerBound { get; set; }

        /// <summary>
        /// b - Constant,
        /// has to be <paramref name="ExplosionSparksNumberLowerBound"/> &lt; b &lt; 1
        /// </summary>
        public Double ExplosionSparksNumberUpperBound { get; set; }

        /// <summary>
        /// Â - Maximum explosion amplitude
        /// </summary>
        public Double ExplosionSparksMaximumAmplitude { get; set; }

        /// <summary>
        /// m̂ - Number of specific sparks generated by an explosion
        /// </summary>
        public Int32 SpecificSparksNumber { get; set; }

        /// <summary>
        /// Number of steps to do before exiting the algorithm
        /// </summary>
        public Int32 TerminationNumberOfSteps { get; set; }

        /// <summary>
        /// Maximum allowed error (difference between real optimum and best
        /// existing firework or spark)
        /// </summary>
        public Double TerminationDesiredAccuracy { get; set; }
    }
}